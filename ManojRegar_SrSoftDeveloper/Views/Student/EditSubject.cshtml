@model ManojRegar_SrSoftDeveloper.Models.Subjects

@{
    ViewBag.Title = "EditSubject";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var IsSample2 = TempData["IsSample2"] != null ? Convert.ToBoolean(TempData["IsSample2"]) : false;
    TempData["IsSample2"] = IsSample2;
}
<script>
    $(document).ready(function () {
        $("#Marks").inputmask({alias: "decimal",integerDigits: 3,digits: 2,allowMinus: false,digitsOptional: false,placeholder: "0",min: 1,max: 100});
    });
</script>
<h2>Edit Subject</h2>

@using (Html.BeginForm("EditSubject", "Student", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="col-md-6">
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })<span class="text-danger">*</span>
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Marks, htmlAttributes: new { @class = "control-label" })<span class="text-danger">*</span>
                    </div>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Marks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Marks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.StudentId, htmlAttributes: new { @class = "control-label" })<span class="text-danger">*</span>
                    </div>
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.StudentId,null,  new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <input type="submit" value="Save" class="btn btn-success" />
                    </div>
                </div>

                <br />
                @if (TempData["SubjectFormSuccess"] != null)
                {
                    <div class="row">
                        <div class="col-md-12 text-success font16">
                            @TempData["SubjectFormSuccess"].ToString();
                        </div>
                    </div>
                }
                @if (TempData["SubjectFormError"] != null)
                {
                    <div class="row">
                        <div class="col-md-12 text-danger font16">
                            @TempData["SubjectFormError"].ToString();
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-12">
        @if (IsSample2)
        {
            @Html.ActionLink("Back to List", "StudentsList2")
        }
        else
        {
            @Html.ActionLink("Back to List", "Index")
        }

    </div>
</div>
